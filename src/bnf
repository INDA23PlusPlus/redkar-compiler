<body> ::= E | <statement>
<statement> ::= <empty> ( <if> | <boom> | <while> | <varinit> | <assign> ) <empty>

/* decimal can start with 0, right now, need to fix later */
<decimal> ::= [0-9]+

<var> ::= ( (([0-9] | [a-z])+ ("_")+ ([0-9] | [a-z])+)* )
<empty> ::= E | " " | "\n" | "\t"

/* some multiplicative operation MD_Expr */ 
<MD_Expr> ::= <MD_Expr> <empty> "*" <empty> <alone> | <MD_Expr> <empty> "/" <empty> <alone> | <alone>

<alone> ::= "(" <expr> ")" | <decimal> | <var>

<boolexpr> ::= "True" | "False" | <expr> <empty> "==" <empty> <expr> | <expr> <empty> "<" <empty> <expr> | <expr> <empty> "<=" <empty> <expr> | "!" <empty> <boolexpr>
/* need to add support for the two following */
/* <boolexpr> <empty> "&&" <empty> <boolexpr> | <boolexpr> <empty> "||" <empty> <boolexpr>  */

<assign> ::= <var> <empty> "=" <empty> <expr> ";"
<varinit> ::= "Var " <empty> <var> <empty> "=" <empty> <expr> ";"

/* addition and subtraction */
<expr> ::= <expr> <empty> "+" <empty> <MD_Expr> | <expr> <empty> "-" <empty> <MD_Expr> | <MD_Expr>

/* statement things now */

<if> ::= ( "If" <empty> "(" <empty> <boolexpr> <empty> ")" <empty> "{" <body> <empty> "}" ) ( <empty> "Else" <empty> "{" <body> <empty> "}" )?
<while> ::= "While" <empty> "(" <empty> <boolexpr> <empty> ")" <empty> "{" <body> <empty> "}"
<boom> ::= "Boom(" <expr> ");"

